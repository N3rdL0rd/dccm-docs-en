"use strict";(self.webpackChunkdocs_zh=self.webpackChunkdocs_zh||[]).push([[855],{8108:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"dev/tutorial/first-weapon","title":"Creating Your First Weapon","description":"This tutorial will guide you through creating a simple mod that modifies a basic in-game function.","source":"@site/docs/dev/tutorial/first-weapon.md","sourceDirName":"dev/tutorial","slug":"/dev/tutorial/first-weapon","permalink":"/docs-en/docs/dev/tutorial/first-weapon","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Creating Your First Mod","permalink":"/docs-en/docs/dev/tutorial/first-mod"},"next":{"title":"Viewing the Game\'s Code","permalink":"/docs-en/docs/dev/look-persudo"}}');var i=t(4848),r=t(8453);const s={sidebar_position:3},a="Creating Your First Weapon",d={},l=[{value:"Creating the Mod Project",id:"creating-the-mod-project",level:2},{value:"Making res.pak",id:"making-respak",level:2},{value:"Copying res.pak",id:"copying-respak",level:3},{value:"Writing the Code",id:"writing-the-code",level:2},{value:"Loading res.pak",id:"loading-respak",level:3},{value:"Creating the Weapon Class",id:"creating-the-weapon-class",level:3},{value:"Registering the New Weapon",id:"registering-the-new-weapon",level:3},{value:"Getting the New Weapon",id:"getting-the-new-weapon",level:3},{value:"Effect Demonstration",id:"effect-demonstration",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"creating-your-first-weapon",children:"Creating Your First Weapon"})}),"\n",(0,i.jsx)(n.p,{children:"This tutorial will guide you through creating a simple mod that modifies a basic in-game function."}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The mod code for this tutorial is stored on ",(0,i.jsx)(n.a,{href:"https://github.com/dead-cells-core-modding/docs-zh/blob/main/modproject/FirstWeapon",children:"Github"}),"."]}),(0,i.jsxs)(n.p,{children:["Most of the code in this chapter comes from ",(0,i.jsx)(n.strong,{children:"Frostbite"}),". Thanks to Frostbite for their help with this tutorial."]})]}),"\n",(0,i.jsx)(n.h2,{id:"creating-the-mod-project",children:"Creating the Mod Project"}),"\n",(0,i.jsxs)(n.p,{children:["Follow the ",(0,i.jsx)(n.a,{href:"/docs-en/docs/dev/tutorial/first-mod",children:"tutorial"})," to create a new mod project named ",(0,i.jsx)(n.strong,{children:"FirstWeapon"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"making-respak",children:"Making res.pak"}),"\n",(0,i.jsxs)(n.p,{children:["Follow the ",(0,i.jsx)(n.a,{href:"https://www.bilibili.com/opus/681993184170999904",children:"tutorial"})," to create a ",(0,i.jsx)(n.strong,{children:"diff pak"}),". The ",(0,i.jsx)(n.strong,{children:"CDB"})," should include:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A new weapon named ",(0,i.jsx)(n.strong,{children:"OtherDashSword"})," and its corresponding ",(0,i.jsx)(n.strong,{children:"item"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"OtherDashSword"})," can be replaced with another name."]})}),"\n",(0,i.jsxs)(n.p,{children:["A pre-made ",(0,i.jsx)(n.a,{href:"https://github.com/dead-cells-core-modding/docs-zh/blob/main/modproject/FirstWeapon/res.pak",children:"res.pak"})," is available."]}),"\n",(0,i.jsx)(n.h3,{id:"copying-respak",children:"Copying res.pak"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Copy the ",(0,i.jsx)(n.strong,{children:"res.pak"})," file obtained in the previous step to the project's root directory."]}),"\n",(0,i.jsxs)(n.li,{children:["Modify ",(0,i.jsx)(n.strong,{children:"FirstWeapon.csproj"})," by adding the following content:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<ItemGroup>\n    \x3c!--Copies the res.pak file to the bin\\Debug\\net9.0 directory--\x3e\n    <None Update="res.pak">\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n    </None>\n\n    \x3c!--Copies the res.pak file to the final output directory--\x3e\n    <OutputFiles Include="res.pak" />\n</ItemGroup>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"writing-the-code",children:"Writing the Code"}),"\n",(0,i.jsx)(n.h3,{id:"loading-respak",children:"Loading res.pak"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Modify the ",(0,i.jsx)(n.code,{children:"FirstWeaponMod.FirstWeapon"})," class to implement the ",(0,i.jsx)(n.code,{children:"IOnGameEndInit"})," interface."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'// Load res.pak and refresh the CDB\nvoid IOnGameEndInit.OnGameEndInit()\n{\n    var res = Info.ModRoot!.GetFilePath("res.pak"); // Get the absolute path of the res.pak file in the mod\'s root directory\n    FsPak.Instance.FileSystem.loadPak(res.AsHaxeString()); // Load res.pak\n    var json =  CDBManager.Class.instance.getAlteredCDB(); // Get the merged CDB JSON\n    Data.Class.loadJson( // Load the merged CDB JSON\n       json, \n       default);  \n}\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["After successfully loading ",(0,i.jsx)(n.strong,{children:"res.pak"}),", you should see something similar to this in the log:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"[14:30:13 INF][FsPak] Loading pak from C:\\SteamLibrary\\steamapps\\common\\Dead Cells\\coremod\\mods\\FirstWeapon\\res.pak\n"})})]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"IOnGameExit"})," and ",(0,i.jsx)(n.code,{children:"IOnGameEndInit"})," interfaces are part of the ",(0,i.jsx)(n.strong,{children:"event system"}),". They are called when their corresponding ",(0,i.jsx)(n.strong,{children:"events"})," are triggered."]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"IOnGameExit"})," will be called before the game exits."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"OnGameEndInit"})," will be called after the game has been initialized."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"IOnHeroUpdate"})," will be called once every frame within the game."]}),"\n"]})]}),"\n",(0,i.jsx)(n.h3,{id:"creating-the-weapon-class",children:"Creating the Weapon Class"}),"\n",(0,i.jsxs)(n.p,{children:["Create a new class ",(0,i.jsx)(n.code,{children:"FirstWeaponMod.OtherDashSwordWeapon"})," that inherits from the ",(0,i.jsx)(n.code,{children:"DashSword"})," class and implements the ",(0,i.jsx)(n.code,{children:"IHxbitSerializable<object>"})," interface."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"// Weapon class\ninternal class OtherDashSwordWeapon : \n    DashSword, // Base class\n    IHxbitSerializable<object>\n{\n\n    // Default constructor\n    public OtherDashSwordWeapon(Hero o, InventItem i) : base(o, i)\n    {\n    }\n\n    // Leave empty\n    object IHxbitSerializable<object>.GetData()\n    {\n        return new(); //TODO\n    }\n\n    // Leave empty\n    void IHxbitSerializable<object>.SetData(object data)\n    {\n        //TODO\n    }\n\n     // Test effect - add 10 cells per frame\n    public override void fixedUpdate()\n    {\n        base.fixedUpdate();\n        bool noStats = false;\n        this.owner.addCells(10, new HaxeProxy.Runtime.Ref<bool>(ref noStats));\n    }\n}\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"IHxbitSerializable<>"})," interface is used to save game object data."]}),(0,i.jsxs)(n.p,{children:["For simplicity, this weapon class inherits from the ",(0,i.jsx)(n.code,{children:"DashSword"})," class instead of directly from the ",(0,i.jsx)(n.code,{children:"Weapon"})," class (the base class for all weapons)."]})]}),"\n",(0,i.jsx)(n.h3,{id:"registering-the-new-weapon",children:"Registering the New Weapon"}),"\n",(0,i.jsxs)(n.p,{children:["Simply adding the new weapon's information to the ",(0,i.jsx)(n.strong,{children:"CDB"})," is not enough."]}),"\n",(0,i.jsxs)(n.p,{children:["To make the game recognize the new weapon, you also need to modify the ",(0,i.jsx)(n.code,{children:"FirstWeaponMod.FirstWeapon"})," class by adding the following:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:' public override void Initialize()\n {\n     Logger.Information("Hello, World");\n\n     Hook__Weapon.create += Hook__Weapon_create; // Hook $Weapon.create\n }\n\n private Weapon Hook__Weapon_create(Hook__Weapon.orig_create orig, dc.en.Hero o, InventItem i)\n {\n     var id = i._itemData.id.ToString(); // Get the weapon ID\n     if(id == "OtherDashSword")\n     {\n         return new OtherDashSwordWeapon(o, i); // Return the custom weapon\n     }\n     else\n     {\n         return orig(o, i); // Call the original method\n     }\n }\n'})}),"\n",(0,i.jsx)(n.h3,{id:"getting-the-new-weapon",children:"Getting the New Weapon"}),"\n",(0,i.jsx)(n.p,{children:"Obviously, you can't get the new weapon yet because it has no acquisition method."}),"\n",(0,i.jsx)(n.p,{children:"You can create the item corresponding to the new weapon with the following code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'// Spawns the item\nprivate void SpawnWeapon(Hero hero)\n{\n    InventItem testItem = new InventItem(new InventItemKind.Weapon("OtherDashSword".AsHaxeString()));\n    bool test_boolean = false;\n    ItemDrop itemDrop = new ItemDrop(hero._level, hero.cx, hero.cy, testItem, true, new HaxeProxy.Runtime.Ref<bool>(ref test_boolean));\n    // The init method must be called after creating the drop, otherwise the game will crash\n    itemDrop.init();\n    itemDrop.onDropAsLoot();\n    itemDrop.dx = hero.dx; // Not sure why this step is necessary, but it\'s in the original code\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["For simplicity, use the following code to allow obtaining the ",(0,i.jsx)(n.strong,{children:"new weapon"})," by pressing the ",(0,i.jsx)(n.strong,{children:"backslash key"})," ",(0,i.jsx)(n.strong,{children:"in-game"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"// Implement the IOnHeroUpdate interface\nvoid IOnHeroUpdate.OnHeroUpdate(double dt)\n{\n    if(Key.Class.isPressed(0xDC /**Backslash key code**/))\n    {\n        SpawnWeapon(Game.Instance.HeroInstance!);\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"effect-demonstration",children:"Effect Demonstration"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/dead-cells-core-modding/docs-zh/blob/main/docs/dev/videos/Dead%20Cells%20with%20Core%20Modding%202025-07-21%2015-30-36.mp4",children:"Video"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(6540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);