"use strict";(self.webpackChunkdocs_zh=self.webpackChunkdocs_zh||[]).push([[361],{2939:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"index","title":"Dead Cells Core Modding","description":"GitHub License Build And Test","source":"@site/docs/index.md","sourceDirName":".","slug":"/","permalink":"/docs-en/docs/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Tutorials","permalink":"/docs-en/docs/category/tutorials"}}');var t=i(4848),o=i(8453);const r={sidebar_position:1},d="Dead Cells Core Modding",l={},a=[{value:"Submitting an Issue",id:"submitting-an-issue",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dead-cells-core-modding",children:"Dead Cells Core Modding"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{src:"https://img.shields.io/github/license/dead-cells-core-modding/core",alt:"GitHub License"})," ",(0,t.jsx)(n.a,{href:"https://github.com/dead-cells-core-modding/core/actions/workflows/build.yml",children:(0,t.jsx)(n.img,{src:"https://github.com/dead-cells-core-modding/core/actions/workflows/build.yml/badge.svg?branch=dev",alt:"Build And Test"})})]}),"\n",(0,t.jsx)(n.p,{children:"Dead Cells Core Modding (DCCM) is an unofficial modding framework designed to provide more in-depth modification of the game."}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"DCCM currently only supports the Windows version on the Steam platform."})}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:"DCCM is still under development. This means:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The API may undergo significant changes without prior notice."}),"\n",(0,t.jsxs)(n.li,{children:["Confusing bugs may appear.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If you find any bugs, please ",(0,t.jsx)(n.a,{href:"#submitting-an-issue",children:"submit an issue to us"}),"."]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"submitting-an-issue",children:"Submitting an Issue"}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"As the developer is a high school senior with limited time for maintenance, please understand that bug fixes may take a considerable amount of time."})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"Before submitting, please ensure that the issue has not already been reported."})}),"\n",(0,t.jsxs)(n.p,{children:["Create a new issue on the ",(0,t.jsx)(n.a,{href:"https://github.com/dead-cells-core-modding/core/issues/new",children:"Github Issues"})," page."]}),"\n",(0,t.jsx)(n.p,{children:"The issue should include the following:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Problem Description"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A detailed explanation of the problem encountered (crashes/errors/abnormal behavior, etc.)."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Log File"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Path: ",(0,t.jsx)(n.code,{children:"<DeadCellsGameRoot>/coremod/logs/log_latest.log"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Additional Materials"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A screenshot of when the problem occurred."}),"\n",(0,t.jsx)(n.li,{children:"Other relevant debugging information."}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);